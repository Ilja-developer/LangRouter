{
    "docs": [
        {
            "location": "/", 
            "text": "Intro\n\n\nLangRouter is a language routing plugin for MODx Revolution that is meant to be used with Babel. It takes care of switching contexts that hold the translations, depending on the URL requested by the client.\n\n\nRequirements\n\n\n\n\nMODX Revolution 2.2.4+\n\n\nPHP v5.3+\n\n\n\n\nFeatures\n\n\n\n\nLangRouter works out-of-the-box and doesn't require any URL rewrite rule changes in the webserver configuration. \n\n\nIt checks the client's browser accepted languages and switches to the first accepted and available language context.\n\n\nAll routing is handled internally by MODX. This greatly simplifies the setup and provides portability. \n\n\nLangRouter was tested with Apache and Lighttpd.\n\n\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 15]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Home"
        }, 
        {
            "location": "/#intro", 
            "text": "LangRouter is a language routing plugin for MODx Revolution that is meant to be used with Babel. It takes care of switching contexts that hold the translations, depending on the URL requested by the client.  Requirements   MODX Revolution 2.2.4+  PHP v5.3+   Features   LangRouter works out-of-the-box and doesn't require any URL rewrite rule changes in the webserver configuration.   It checks the client's browser accepted languages and switches to the first accepted and available language context.  All routing is handled internally by MODX. This greatly simplifies the setup and provides portability.   LangRouter was tested with Apache and Lighttpd.    \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 15]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Intro"
        }, 
        {
            "location": "/installation/", 
            "text": "Install from MODX Extras\n\n\nSearch for LangRouter in the Package Manager of your MODX installation and install it in there. You have to fill the context key of the default language during the setup. See in \nUsage\n for the possible value.\n\n\nManual installation\n\n\nIf you can't access the MODX Extras Repository in your MODX installation, you can manually install LangRouter.\n\n\n\n\nDownload the transport package from \nMODX Extras\n\n  (or one of the pre built transport packages in \n_packages\n)\n\n\nUpload the zip file to your MODX installation's \ncore/packages\n folder or upload it manually in the MODX Package Manager.\n\n\nIn the Package Manager of your MODX installation, and select 'Search locally for packages' from the dropdown \n  button.\n\n\nLangRouter should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.\n\n\n\n\nBuild it from source\n\n\nTo build and install the package from source you could use \nGit Package Management\n. \nThe GitHub repository of LangRouter contains a \nconfig.json\n \nto build that package locally. Use this option, if you want to debug LangRouter and/or contribute bugfixes and enhancements.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 15]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#install-from-modx-extras", 
            "text": "Search for LangRouter in the Package Manager of your MODX installation and install it in there. You have to fill the context key of the default language during the setup. See in  Usage  for the possible value.", 
            "title": "Install from MODX Extras"
        }, 
        {
            "location": "/installation/#manual-installation", 
            "text": "If you can't access the MODX Extras Repository in your MODX installation, you can manually install LangRouter.   Download the transport package from  MODX Extras \n  (or one of the pre built transport packages in  _packages )  Upload the zip file to your MODX installation's  core/packages  folder or upload it manually in the MODX Package Manager.  In the Package Manager of your MODX installation, and select 'Search locally for packages' from the dropdown \n  button.  LangRouter should now show up in the list of available packages. Click the corresponding 'Install' button and follow \n  instructions to complete the installation.", 
            "title": "Manual installation"
        }, 
        {
            "location": "/installation/#build-it-from-source", 
            "text": "To build and install the package from source you could use  Git Package Management . \nThe GitHub repository of LangRouter contains a  config.json  \nto build that package locally. Use this option, if you want to debug LangRouter and/or contribute bugfixes and enhancements.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 15]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Build it from source"
        }, 
        {
            "location": "/usage/", 
            "text": "Usage\n\n\nAfter (or before) the installation of LangRouter you have to prepare your contexts.\n\n\n\n\nCreate one context for each language with the later language subfolder name as \ncontext key\n and name it with the language name. Normally the context key would be equal with the cultureKey of that language, i.e. \nen\n as \ncontext key\n and \nEnglish\n as \ncontext name\n.\n\n\nCreate the context setting \nbase_url\n in each context and set it to \n/\n.\n\n\nFor each context create a \nsite_url\n context setting and fill it with the following value: \n{server_protocol}://{http_host}{base_url}{cultureKey}/\n. MODX handles the placeholder replacements in that setting on its own.\n\n\nFill the MODX system setting \nbabel.contextDefault\n with the context key of the default language, if you did not filled it during the Installation of LangRouter.\n\n\nIn head section of the template insert the following line \nbase href=\"[[++site_url]]\" /\n.\n\n\nInclude the static files from the assets folder in your installation with \n[[++assets_url]]path/to/static_file\n, i.e. \nlink href=\"[[++assets_url]]css/site.css\" rel=\"stylesheet\"/\n or \nimg src=\"[[++assets_url]]images/whatever.jpg\" \u2026 /\n\n\nSet the MODX system setting \nlink_tag_scheme\n to \n-1\n (URL is relative to site_url)\n\n\n\n\nTo create these settings easily, you could use the \nCross Contexts Settings\n extra available on MODX Extras.\n\n\nCaution\n\n\nPlease don't activate the \nfriendly_urls_strict\n MODX system setting, if you use LangRouter. That could cause nasty redirect loops.\n\n\n\n\n\n\n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 15]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#usage", 
            "text": "After (or before) the installation of LangRouter you have to prepare your contexts.   Create one context for each language with the later language subfolder name as  context key  and name it with the language name. Normally the context key would be equal with the cultureKey of that language, i.e.  en  as  context key  and  English  as  context name .  Create the context setting  base_url  in each context and set it to  / .  For each context create a  site_url  context setting and fill it with the following value:  {server_protocol}://{http_host}{base_url}{cultureKey}/ . MODX handles the placeholder replacements in that setting on its own.  Fill the MODX system setting  babel.contextDefault  with the context key of the default language, if you did not filled it during the Installation of LangRouter.  In head section of the template insert the following line  base href=\"[[++site_url]]\" / .  Include the static files from the assets folder in your installation with  [[++assets_url]]path/to/static_file , i.e.  link href=\"[[++assets_url]]css/site.css\" rel=\"stylesheet\"/  or  img src=\"[[++assets_url]]images/whatever.jpg\" \u2026 /  Set the MODX system setting  link_tag_scheme  to  -1  (URL is relative to site_url)   To create these settings easily, you could use the  Cross Contexts Settings  extra available on MODX Extras.", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#caution", 
            "text": "Please don't activate the  friendly_urls_strict  MODX system setting, if you use LangRouter. That could cause nasty redirect loops.   \n  var _paq = _paq || [];\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//piwik.partout.info/\";\n    _paq.push(['setTrackerUrl', u+'piwik.php']);\n    _paq.push(['setSiteId', 15]);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);\n  })();", 
            "title": "Caution"
        }
    ]
}